<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>tomee-bugs</groupId>
        <artifactId>corba-serilization-infinite-loop-root</artifactId>
        <version>1.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <artifactId>corba-serilization-infinite-loop-war</artifactId>
    <packaging>war</packaging>
    <version>1.0-SNAPSHOT</version>
    <name>${project.artifactId}</name>
    <url>http://maven.apache.org</url>



    <dependencies>                

        <dependency>
            <groupId>tomee-bugs</groupId>
            <artifactId>corba-serilization-infinite-loop-core-ejb</artifactId>
        </dependency>
        
        <dependency>
            <groupId>tomee-bugs</groupId>
            <artifactId>corba-serilization-infinite-loop-main-ejb</artifactId>
        </dependency>
        
        
                   
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
                
        <!--dependency>
            <groupId>org.jboss.weld</groupId>
            <artifactId>weld-core</artifactId>
            <version>1.1.8.Final</version>
            <scope>provided</scope>
        </dependency-->

        

        <!-- ******************************************** JSF & JSF Libraries ******************************************** -->
        <dependency>
            <groupId>org.apache.deltaspike.core</groupId>
            <artifactId>deltaspike-core-api</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.deltaspike.core</groupId>
            <artifactId>deltaspike-core-impl</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.deltaspike.modules</groupId>
            <artifactId>deltaspike-jsf-module-api</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.deltaspike.modules</groupId>
            <artifactId>deltaspike-jsf-module-impl-ee6</artifactId>
        </dependency>

        <dependency>
            <groupId>org.primefaces</groupId>
            <artifactId>primefaces</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
        </dependency>

        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.faces</artifactId>
        </dependency>
        

        <dependency>
            <groupId>javax.el</groupId>
            <artifactId>el-api</artifactId>
        </dependency>

        <dependency>
            <groupId>com.sun.el</groupId>
            <artifactId>el-ri</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
        </dependency>
            
        <dependency>
            <groupId>javax.jms</groupId>
            <artifactId>jms-api</artifactId>
        </dependency>
        
        
        
        <!-- JEE 6 -->
        <!-- ******************************************** JEE 6 APIs ******************************************** -->

        <dependency>
            <!-- Fixes Absent Code attribute in method that is not native or abstract in class file javax/transaction/SystemException-->
            <groupId>org.glassfish.main.transaction</groupId>
            <artifactId>javax.transaction</artifactId>
        </dependency>        
        <!-- This packages seems to leak into the unit test excution
            and its javax.transaction.SystemException is just a shell without code.
            Weblogic full client ahas the true implementation but it
            has a bad interfaces for the entity manager, whereby the em.getPropreties() does not work if weblogic
            sits in the front of this library to compile the create database.
        -->
        <dependency>            
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
        </dependency>                       
        
        
        <!-- ******************************************** UNIT TESTS ******************************************** -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        
        <!-- JNDI EJB Client for weblogic -->
        <!--dependency>       
            <groupId>groupId</groupId>
            <artifactId>artifactId</artifactId>
            <version>1.0</version>
            <scope>system</scope>
            <systemPath>${env.MW_HOME}/wlserver/server/lib/wlfullclient.jar</systemPath>                      
        </dependency-->    
		
        <!-- Full client dependency -->
        <dependency>
            <groupId>org.glassfish.main.appclient.client</groupId>
            <artifactId>gf-client</artifactId>
        </dependency>       

    </dependencies>


    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
                 
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>                  
            </plugin>
        </plugins>
    </build>


</project>
